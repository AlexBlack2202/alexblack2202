<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Opencv on Phạm Duy Tùng Machine Learning Blog</title>
    <link>/tags/opencv/</link>
    <description>Recent content in Opencv on Phạm Duy Tùng Machine Learning Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Copyright © 2016-{year} Phạm Duy Tùng. All Rights Reserved.</copyright>
    <lastBuildDate>Fri, 15 Jan 2021 00:19:00 +0300</lastBuildDate>
    <atom:link href="/tags/opencv/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tìm hiểu thuật toán tối ưu hóa Adabelief Optimizer</title>
      <link>/blog/2021-01-15---adabelief-optimizer/</link>
      <pubDate>Fri, 15 Jan 2021 00:19:00 +0300</pubDate>
      <guid>/blog/2021-01-15---adabelief-optimizer/</guid>
      <description>Hi các bạn, lại là mình đây, hôm nay mình sẽ cùng các bạn tìm hiểu thuật toán tối ưu hóa AdaBelief. Thuật toán này được sử dụng để thay cho thuật toán Adam optimizer mà các bạn hiện đang xài để huấn luyện mô hình Deep learning. Nào, chúng ta cùng bắt đầu tìm hiểu nhé.</description>
    </item>
    <item>
      <title>Reinforcement Learning và tictactoe</title>
      <link>/blog/2020-12-26---tic-tac-toe/</link>
      <pubDate>Sun, 27 Dec 2020 00:19:00 +0300</pubDate>
      <guid>/blog/2020-12-26---tic-tac-toe/</guid>
      <description>Trong khi trong các phương pháp lý thuyết trò chơi nói chung, ví dụ thuật toán min-max, thuật toán luôn giả định chúng ta có một đối thủ hoàn hảo, công việc phải thực hiện là tối đa hóa phần thưởng của mình và giảm thiểu phần thưởng của đối thủ ( tối đa hóa điểm của mình và tối thiểu hóa điểm của đối thủ), trong học củng cố, chúng ta không cần giả định đối thủ của chúng ta là 1 thiên tài xuất chúng, nhưng chung ta vẫn thu được mô hình với kết quả rất tốt.</description>
    </item>
    <item>
      <title>Xây dựng game xếp gạch bằng opencv và python</title>
      <link>/blog/2020-12-25---tetric/</link>
      <pubDate>Sat, 26 Dec 2020 00:19:00 +0300</pubDate>
      <guid>/blog/2020-12-25---tetric/</guid>
      <description>Xếp gạch là một trong những game được các bạn thế hệ 8x, 9x đời đầu phá đảo. Bây giờ chúng ta thử code lại nó với opencv và Python nhé.  (optional)</description>
    </item>
    <item>
      <title>Ngưỡng (thresholding) trong opencv</title>
      <link>/blog/2020-12-24-thresholding/</link>
      <pubDate>Fri, 25 Dec 2020 00:19:00 +0300</pubDate>
      <guid>/blog/2020-12-24-thresholding/</guid>
      <description>Khi làm việc với opencv, chúng ta bắt gặp rất nhiều thuật toán cần phải xét ngưỡng. Vậy giá trị ngưỡng là gì. Ở bài viết này, chúng ta sẽ tìm hiểu và làm rõ nội dung trên nhé</description>
    </item>
    <item>
      <title>Contour</title>
      <link>/blog/2019-05-26-contours/</link>
      <pubDate>Sun, 26 May 2019 00:12:00 +0300</pubDate>
      <guid>/blog/2019-05-26-contours/</guid>
      <description>Mình dang làm một số đề tài về xử lý ảnh, và đang muốn áp dụng các thuật toán xử lý ảnh cổ điển (không dùng đến deep learning và machine learning) để giải quyết bài toán của mình. Bài viết này nằm trong seria bài viết của mình về đề tài xử lý ảnh sử dụng các kỹ thuật cơ bản. Bài đầu tiên là giới thiệu về contours và sử dụng opencv để rút ra các contour .</description>
    </item>
  </channel>
</rss>
