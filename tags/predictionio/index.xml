<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PredictionIO on Phạm Duy Tùng Machine Learning Blog</title>
    <link>/tags/predictionio/</link>
    <description>Recent content in PredictionIO on Phạm Duy Tùng Machine Learning Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>alexblack2202@gmail.com (Phạm Duy Tùng)</managingEditor>
    <webMaster>alexblack2202@gmail.com (Phạm Duy Tùng)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Fri, 03 May 2019 00:12:00 +0300</lastBuildDate>
    <atom:link href="/tags/predictionio/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PredictionIO Phần 1 - Hướng dẫn cài đặt</title>
      <link>/blog/2019-05-04-setup-predictio/</link>
      <pubDate>Fri, 03 May 2019 00:12:00 +0300</pubDate>
      <author>alexblack2202@gmail.com (Phạm Duy Tùng)</author>
      <guid>/blog/2019-05-04-setup-predictio/</guid>
      <description>

&lt;h1 id=&#34;1-giới-thiệu-về-predictionio&#34;&gt;1. Giới thiệu về PredictionIO&lt;/h1&gt;

&lt;p&gt;PredictionIO là một &amp;ldquo;open source Machine Learning Server built on top of a state-of-the-art open source stack&amp;rdquo; giúp cho các developers và các data scientists tạo ra các engine dự đoán trong học máy. PredictionIO giúp chúng ta&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Xây dựng và triển khai các ứng dụng, dịch vụ một cách nhanh chóng bằng cách tuỳ chỉnh lại các template đã sẵn có.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Trả lời các câu truy vấn động trong thời gian thực.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;huấn luyện và so sánh/đánh giá nhiều mô hình khác nhau dễ dàng.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Hợp nhất hoá dữ liệu từ nhiều nền tảng khác nhau hoặc trong thời gian thực để thực hiện phân tích dự đoán.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Hỗ trợ các thư viện máy học và xử lý dữ liệu như Spark MLLib và OpenNLP&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Tự xây dựng, triển khai, customize một mô hình machine learning&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;2-cơ-chế-hoạt-động-của-predictionio&#34;&gt;2. Cơ chế hoạt động của PredictionIO&lt;/h1&gt;

&lt;p&gt;PredictionIO bao gồm các thành phần sau:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;PredictionIO platform: là nền tảng open source được apache xây dựng sẵn giúp chúng ta triển khai, xây dựng, đánh giá các mô hình máy học.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Event Server: là nơi giúp chúng ta chuẩn hoá các sự kiện từ nhiều nguồn khác nhau&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Template Gallery: là nơi chúng ta download các engine template máy học về. PredictionIO hỗ trợ cho chúng ta rất nhiều template mẫu khác nhau. Chúng ta sẽ lần lượt tìm hiểu và implement ở các bài viết tiếp theo.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;event-server&#34;&gt;Event Server&lt;/h3&gt;

&lt;p&gt;PredictionIO Event Server chịu trách nhiệu thu thập dữ liệu từ các ứng dụng của bạn. Bạn có thể nhìn kỹ hơn ở hình bên dưới, các ứng dụng web, mobile app &amp;hellip; khi người dùng tương tác sẽ phát sinh các sự kiện (Event Data), ví dụ sự kiện người dùng thêm 1 đơn hàng vào giỏ hàng, người dùng xem sản phẩn A, người dùng xem sản phẩm C sau khi xem sản phẩm A&amp;hellip; Event Server sẽ ghi nhận lại đống dữ liệu này, chuẩn hoá lại. PredictionIO engine sau đó sẽ xây dựng mô hình dự đoán dựa trên các dữ liệu chúng ta thu thập được. Sau khi bạn có được mô hình tối ưu, chúng ta sẽ deploy các predict webservice, lắng nghe các truy vấn từ các ứng dụng và trả về kết quả trong thời gian thực.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post_image/predictionio-event.png&#34; alt=&#34;Hình ảnh&#34; /&gt;
&lt;strong&gt;Hình 1: Event server trong predictionio&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Event Server sẽ thu thập dữ liệu của bạn trong thời gian thực hoặc theo chu kỳ. Sau đó, nó sẽ chuẩn hoá dữ liệu hỗn độn của bạn từ nhiều nguồn khác nhau thành một dạng chuẩn chung. Event Server chủ yếu phục vụ hai mục đính chính:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Cung cấp dữ liệu cho các engine để huấn luyện và đánh giá&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Cung cấp dữ liệu dạng chuẩn để data analysis&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cũng giống như một database server, Event Server có thể được sử dụng để phục vụ cho nhiều ứng dụng khác nhau. Dữ liệu được phân tách cho các ứng dụng bằng &amp;ldquo;app_name&amp;rdquo; duy nhất. Cái này sẽ nói lại lúc xây dựng ứng dụng ở bên dưới.&lt;/p&gt;

&lt;p&gt;Khi một Event Server được triển khai, bạn có thể gửi dữ liệu cho một &amp;lsquo;app_name&amp;rsquo; cụ thể nào đó, app-name được định danh bằng access key. Dữ liệu được gửi đến Event Server sử dụng &lt;strong&gt;EventAPI&lt;/strong&gt; sử dụng giao thức http (tham khảo thêm ở &lt;a href=&#34;https://predictionio.apache.org/datacollection/eventapi/&#34;&gt;https://predictionio.apache.org/datacollection/eventapi/&lt;/a&gt;) hoặc sử dụng các PredictionIO SDK. Tham khảo thêm các SDK ở &lt;a href=&#34;https://predictionio.apache.org/sdk/&#34;&gt;https://predictionio.apache.org/sdk/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Trong một số trường hợp, bạn muốn engine đọc dữ liệu từ một datastore nào đó thay vì Event Server. Bạn có thể thực hiện thông qua hướng dẫn ở &lt;a href=&#34;https://predictionio.apache.org/start/customize/&#34;&gt;https://predictionio.apache.org/start/customize/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;engine&#34;&gt;Engine&lt;/h3&gt;

&lt;p&gt;Engine là nơi chịu trách nhiệu đưa ra các quyết định. Nó gồm một hoặc nhiều thuật toán học máy học khác nhau. Các Engine sẽ huấn luyện dữ liệu và xây dựng các mô hình dự đoán. Sau đó sẽ phát triển thành các webservice. Các webservice sẽ nhận các truy vấn từ ứng dụng, dự đoán và trả về kết quả cho ứng dụng.&lt;/p&gt;

&lt;p&gt;PredictionIO&amp;rsquo;s  cung cấp cho chúng ta rất nhiều các template khác nhau đáp ứng gần như là đẩy đủ các mô hình máy học mà chúng ta cần. Bạn có thể dễ dàng tạo một mô hình máy học từ các template. Các thành phần của một template dược đặt tên là &lt;strong&gt;Data Source, Data Preparator, Algorithm(s), Serving&lt;/strong&gt;, các bạn có thể dễ dàng customize lại tuỳ thuộc nhu cầu của bạn.&lt;/p&gt;

&lt;h1 id=&#34;3-cài-đặt-predictionio-trên-môi-trường-ubuntu&#34;&gt;3. Cài đặt PredictionIO trên môi trường Ubuntu&lt;/h1&gt;

&lt;p&gt;Trong thời đại docker, các bạn có thể cài đặt PredictionIO dựa vào các docker được xây dựng sẵn đầy rẫy trên mạng, chúng giúp bạn đỡ tốn công sức hơn. Tuy nhiên, trong bài viết này, mình sẽ cài đặt từng thành phần PredictiIO trên ubuntu, không sử dụng docker.&lt;/p&gt;

&lt;h3 id=&#34;download-và-build-apache-prediction-io&#34;&gt;Download và build Apache Prediction IO&lt;/h3&gt;

&lt;p&gt;Chúng ta sẽ download Prediction IO từ trang github chính chủ. Phiên bản hiện tại là 0.14.0. Các bạn có thể lưu dữ liệu ở đâu tuỳ ý các bạn. Mình lưu ở thư mục &lt;strong&gt;/data/pio&lt;/strong&gt;. Và trong suốt bài viết này, mình sẽ lưu các thứ liên quan trong thư mục /data/pio. Các bạn có cài đặt theo hướng dẫn của mình thì nhớ sửa lại cho đúng đường dẫn của các bạn. Chúng ta sẽ clone nguồn từ trang github predictionio. và sẽ switch qua branch release. Đây là branch chính thành phẩm, các branch khác đang trong giai đoạn phát triển nên có thể build không được. Lúc các bạn làm có thể nó đã phát triển lên bản 15, 16 hoặc 1.0 gì đó rồi. Các bạn cứ tự tin sử dụng phiên bản mới nhất.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;git clone https://github.com/apache/predictionio.git
git checkout release/0.14.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;biên-dịch-prediction-io&#34;&gt;Biên dịch Prediction IO&lt;/h3&gt;

&lt;p&gt;Sau khi tải về bộ nguồn của Prediction IO, chúng ta sẽ tiền hành biên dịch. Quá trình biên dịch sẽ xảy ra khá lâu, các bạn kiên nhẫn chờ đợi&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;cd predictionio
./make-distribution.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kết thúc quá trình biên dịch, các bạn sẽ thấy dòng chữ&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;PredictionIO binary distribution created at PredictionIO-0.14.0.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vậy là chúng ta đã thành công. Việc tiếp theo là giải nén file PredictionIO-0.14.0.tar.gz để sử dụng&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;tar xvzf PredictionIO-0.14.0.tar.gz -C /data/pio
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nhắc lại 1 lần nữa là do thời điểm hiện tại mình viết bài viết này, PredictionIO mới release bản 0.14.0 nên file tập tin sẽ là PredictionIO-0.14.0.tar.gz. Các bạn nhớ giải nén đúng với tên file ứng với phiên bản PredictionIO tương ứng nhé.&lt;/p&gt;

&lt;h3 id=&#34;download-và-giải-nén-các-dependencies&#34;&gt;Download và giải nén các Dependencies&lt;/h3&gt;

&lt;p&gt;Mình sẽ sử dụng Spark, ElasticSearch, Hbase và zookeeper, nên mình download hết về. Mình có thói quen sử dụng phiên bản mới nhất. Nên mình lên trang chủ và lấy link download mới nhất của chúng thôi. Tất cả các Dependencies mình dùng đều được bỏ vào trong thư mục vendors&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
cd PredictionIO-0.14.0
mkdir vendors
cd vendors
wget https://archive.apache.org/dist/spark/spark-2.4.2/spark-2.4.2-bin-hadoop2.7.tgz

wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.6.9.tar.gz

wget https://www.apache.org/dyn/closer.lua/hbase/2.1.4/hbase-2.1.4-bin.tar.gz

wget https://www-us.apache.org/dist/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz

tar xvzf spark-2.4.2-bin-hadoop2.7.tgz

tar xvzf elasticsearch-5.6.9.tar.gz

tar xvzf hbase-2.1.4-bin.tar.gz

tar xvzf zookeeper-3.4.14/zookeeper-3.4.14.tar.gz

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;cấu-hình-chương-trình&#34;&gt;Cấu hình chương trình&lt;/h3&gt;

&lt;h5 id=&#34;cấu-hình-dependency&#34;&gt;Cấu hình dependency&lt;/h5&gt;

&lt;p&gt;Chúng ta sẽ cấu hình một chút để PredictionIO nhận ra các dependency của mình và cấu hình các dependency&lt;/p&gt;

&lt;p&gt;Đầu tiên, chúng ta sẽ chỉnh sửa file &lt;strong&gt;hbase-site.xml&lt;/strong&gt; của HBase&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;nano /data/pio/PredictionIO-0.14.0/vendors/hbase-2.1.4/conf/hbase-site.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thay đoạn&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;configuration&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;bằng đoạn&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;lt;configuration&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.rootdir&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;file:///data/pio/PredictionIO-0.14.0/vendors/hbase-2.1.4&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
  &amp;lt;property&amp;gt;
    &amp;lt;name&amp;gt;hbase.zookeeper.property.dataDir&amp;lt;/name&amp;gt;
    &amp;lt;value&amp;gt;/data/pio/PredictionIO-0.14.0/vendors/zookeeper-3.4.14&amp;lt;/value&amp;gt;
  &amp;lt;/property&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tiếp theo, chúng ta sẽ add đường dẫn java cho hbase&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;nano /data/pio/PredictionIO-0.14.0/vendors/hbase-2.1.4/conf/hbase-env.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thêm đoạn&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt; export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;các bạn hãy thay đường dẫn java tương ứng với đường dẫn trong máy bạn. Nếu chưa có java thì các bạn hãy cài vào, nếu các bạn đã cài java mà không biết nó nằm ở đâu, các bạn có thể gọi lệnh bên dưới để xem đường dẫn&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;update-alternatives --config java
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Để chắc chắn rằng trong máy của bạn có cài java bạn hãy gọi lện &lt;strong&gt;java -version&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ví dụ trong máy mình&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;$java -version
openjdk version &amp;quot;1.8.0_191&amp;quot;
OpenJDK Runtime Environment (build 1.8.0_191-8u191-b12-2ubuntu0.16.04.1-b12)
OpenJDK 64-Bit Server VM (build 25.191-b12, mixed mode)


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Các bạn cố gắng sử dụng phiên bản java mới nhất. Nó sẽ tương thích tốt hơn với phiên bản mới nhất của HBase, hoặc đọc phiên bản java đề nghị trong trang chủ HBase. Tránh trường hợp sử dụng phiên bản java quá cũ HBase không hỗ trợ.&lt;/p&gt;

&lt;h5 id=&#34;cấu-hình-prediction-io&#34;&gt;Cấu hình Prediction IO&lt;/h5&gt;

&lt;p&gt;Chỉnh sửa file &lt;strong&gt;pio-env.sh&lt;/strong&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
nano /data/pio/PredictionIO-0.14.0/conf/pio-env.sh

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mặc định PredictionIO sử dụng PosgresSQl làm event server. Mình không dùng nó mà thay thế bằng HBASE và ELASTICSEARCH.&lt;/p&gt;

&lt;p&gt;Một số thay đổi mình sẽ liệt kê bên dưới&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;SPARK_HOME=$PIO_HOME/vendors/spark-2.3.2-bin-hadoop2.7

HBASE_CONF_DIR=$PIO_HOME/vendors/hbase-2.1.4/conf

PIO_STORAGE_REPOSITORIES_METADATA_NAME=pio_meta
PIO_STORAGE_REPOSITORIES_METADATA_SOURCE=ELASTICSEARCH

PIO_STORAGE_REPOSITORIES_EVENTDATA_NAME=pio_event
PIO_STORAGE_REPOSITORIES_EVENTDATA_SOURCE=HBASE

PIO_STORAGE_REPOSITORIES_MODELDATA_NAME=pio_model
PIO_STORAGE_REPOSITORIES_MODELDATA_SOURCE=LOCALFS

#Comment các dòng này lại, do không dùng postgres
# PIO_STORAGE_SOURCES_PGSQL_PASSWORD accordingly
# PIO_STORAGE_SOURCES_PGSQL_TYPE=jdbc
# PIO_STORAGE_SOURCES_PGSQL_URL=jdbc:postgresql://localhost/pio
# PIO_STORAGE_SOURCES_PGSQL_USERNAME=pio
# PIO_STORAGE_SOURCES_PGSQL_PASSWORD=pio

PIO_STORAGE_SOURCES_ELASTICSEARCH_HOME=$PIO_HOME/vendors/elasticsearch-5.6.9
PIO_STORAGE_SOURCES_HBASE_HOME=$PIO_HOME/vendors/hbase-2.1.4
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;4-khởi-chạy-hệ-thống&#34;&gt;4.Khởi chạy hệ thống&lt;/h1&gt;

&lt;p&gt;Chúng ta sẽ add path của PredictIO vào biến môi trường để sử dụng cho các lần sau&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
nano ~/.bashrc
erport PATH=/data/pio/PredictionIO-0.14.0/bin:$PATH

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hoặc có thể add path trong mỗi session&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;PATH=$PATH:/data/pio/PredictionIO-0.14.0/bin; export PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tiếp theo, chúng ta sẽ cấp quyền cho thư mục PredictionIO&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;sudo chmod -R 775 /data/pio
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nếu không cấp quyền write cho thư mục thì PredictionIO không thể write log file được.&lt;/p&gt;

&lt;p&gt;Chạy PredictionIO Server bằng cách gọi câu lệnh&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pio-start-all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kết quả&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;Stopping PredictionIO Event Server...
Stopping HBase...
stopping hbase.............
Stopping Elasticsearch...
tgdd@U1604:/data/pio/PredictionIO-0.14.0/bin$ pio-start-all
Starting Elasticsearch...
Starting HBase...
running master, logging to /data/pio/PredictionIO-0.14.0/vendors/hbase-2.1.4/bin/../logs/hbase-tgdd-master-U1604.out
Waiting 10 seconds for Storage Repositories to fully initialize...
Starting PredictionIO Event Server...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Để kiểm tra hệ thống khi start có lỗi lầm gì không, chúng ta sử dụng lệnh&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pio status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kết quả&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;[INFO] [Management$] Inspecting PredictionIO...
[INFO] [Management$] PredictionIO 0.14.0 is installed at /data/pio/PredictionIO-0.14.0
[INFO] [Management$] Inspecting Apache Spark...
[INFO] [Management$] Apache Spark is installed at /data/spark-2.3.2-bin-hadoop2.7
[INFO] [Management$] Apache Spark 2.3.2 detected (meets minimum requirement of 2.0.2)
[INFO] [Management$] Inspecting storage backend connections...
[INFO] [Storage$] Verifying Meta Data Backend (Source: ELASTICSEARCH)...
[INFO] [Storage$] Verifying Model Data Backend (Source: LOCALFS)...
[INFO] [Storage$] Verifying Event Data Backend (Source: HBASE)...
[INFO] [Storage$] Test writing to Event Store (App Id 0)...
[INFO] [HBLEvents] The table pio_event:events_0 doesn&#39;t exist yet. Creating now...
[INFO] [HBLEvents] Removing table pio_event:events_0...
[INFO] [Management$] Your system is all ready to go.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bạn thấy dòng chữ &lt;strong&gt;[INFO] [Management$] Your system is all ready to go.&lt;/strong&gt; thì yên tâm, hệ thống đã chạy thành công.&lt;/p&gt;

&lt;p&gt;Để stop hệ thống, các bạn gọi lệnh&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pio-stop-all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kết quả khi stop&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;Stopping PredictionIO Event Server...
Stopping HBase...
stopping hbase.............
Stopping Elasticsearch...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vậy là chúng ta đã tiến hành cài đặt thành công PredictionIO Server rồi. Hẹn gặp bạn ở bài thứ hai, cài đặt các template cho PredictionIO và tiến hành dự đoán.&lt;/p&gt;

&lt;p&gt;Cảm ơn các bạn đã theo dõi. Hẹn gặp bạn ở những bài viết tiếp theo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PredictionIO Phần 2 - Cài đặt chương trình demo</title>
      <link>/blog/2019-05-07-predictio-mini-demo1/</link>
      <pubDate>Fri, 03 May 2019 00:12:00 +0300</pubDate>
      <author>alexblack2202@gmail.com (Phạm Duy Tùng)</author>
      <guid>/blog/2019-05-07-predictio-mini-demo1/</guid>
      <description>

&lt;h1 id=&#34;1-tạo-chương-trình-đầu-tiên-bằng-predictionio&#34;&gt;1. Tạo chương trình đầu tiên bằng PredictionIO&lt;/h1&gt;

&lt;p&gt;Đầu tiên, các bạn hãy tạo thư mục template ở đâu đó. Mình sẽ tạo ở trong thư mục /data/pio. Đường dẫn của mình sẽ là /data/pio/template&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;mdkir /data/pio/template
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tiếp theo, chúng ta sẽ clone templte trên github về, các bạn thực hiện lệnh sau&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;git clone https://github.com/apache/predictionio-template-recommender.git
cd predictionio-template-recommender
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tiếp theo, chúng ta sẽ tạo một app đầu tiên, mình đặt tên là ourrecommendation, các bạn thích đặt tên gì thì đặt nha.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pio app new ourrecommendation

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Để liệt kê danh sách app đang có trong hệ thống, các bạn dùng lệnh&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pio app list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kết quả trong máy mình tại thời điểm viết bài là&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;[INFO] [Pio$]                 Name |   ID |                                                       Access Key | Allowed Event(s)
[INFO] [Pio$]    ourrecommendation |    1 | Z93rJZ7Xq2pXiQwVC6B5nRK6jRykcfyMI5huOijKbdDJeUeKEnVT-ph5nabptIX1 | (all)
[INFO] [Pio$] Finished listing 1 app(s).

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mình mới tạo app đầu tiên tên là ourrecommendation nên chỉ có 1 app trong hệ thống. Sau này sẽ có nhiều hơn. À, sau khi tạo app, thì hệ thống sẽ generate tự động cho app với một Access Key, ví dụ access key của app ourrecommendateion của mình là Z93rJZ7Xq2pXiQwVC6B5nRK6jRykcfyMI5huOijKbdDJeUeKEnVT-ph5nabptIX1. Các bạn sẽ có access key khác với access key của mình, nên đừng copy của mình về làm gì hết :).&lt;/p&gt;

&lt;p&gt;Sau khi khởi tạo app xong, chúng ta sẽ import data vào hệ thống. Ở đây, mình sẽ download dữ liệu mẫu từ nguồn &lt;a href=&#34;https://gist.githubusercontent.com/vaghawan/0a5fb8ddb85e03631dd500d7c8f0677d/raw/17487437dd8269588d9dd1ac859b129a43842ba5/data-sample.json&#34;&gt;https://gist.githubusercontent.com/vaghawan/0a5fb8ddb85e03631dd500d7c8f0677d/raw/17487437dd8269588d9dd1ac859b129a43842ba5/data-sample.json&lt;/a&gt;. Sau khi download về các bạn import dữ liệu vào hệ thống bằng lệnh&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pio import — appid 1 — input data-sample.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Với appod 1 là id của ourrecommendation chúng ta vừa mới tạo. Nếu quên appid, các bạn có thể xem lại bằng lệnh &lt;strong&gt;pio app list&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Sau khi import thành công, chúng ta sẽ thay đổi giá trị của trường appname trong file engine.json thành tên của app mình, là ourrecommendation&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;nano engine.json

{
  &amp;quot;id&amp;quot;: &amp;quot;default&amp;quot;,
  &amp;quot;description&amp;quot;: &amp;quot;Default settings&amp;quot;,
  &amp;quot;engineFactory&amp;quot;: &amp;quot;org.example.recommendation.RecommendationEngine&amp;quot;,
  &amp;quot;datasource&amp;quot;: {
    &amp;quot;params&amp;quot; : {
      &amp;quot;appName&amp;quot;: &amp;quot;ourrecommendation&amp;quot;
    }
  },
  &amp;quot;algorithms&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;als&amp;quot;,
      &amp;quot;params&amp;quot;: {
        &amp;quot;rank&amp;quot;: 10,
        &amp;quot;numIterations&amp;quot;: 20,
        &amp;quot;lambda&amp;quot;: 0.01,
        &amp;quot;seed&amp;quot;: 3
      }
    }
  ]
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Một lưu ý quang trọng là giá trị &amp;ldquo;org.example.recommendation.RecommendationEngine&amp;rdquo; trong &amp;ldquo;engineFactory&amp;rdquo; là của hệ thống. Và bạn đừng sửa, thay đổi chúng. Nói chung là ngoài giá trị của &amp;ldquo;appName&amp;rdquo; ra, bạn không nên thay đổi bất kỳ thức gì khác trong file  engine.json.&lt;/p&gt;

&lt;p&gt;Sau khi import file thành công. Chúng ta sẽ build app. Lệnh build có tác dụng kiểm tra lại hệ thống đã được cấu hình đúng và đủ chưa.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pio build

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nếu build thành công, chúng ta sẽ thấy dòng chữ này.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
[INFO] [Engine$] Build finished successfully.
[INFO] [Pio$] Your engine is ready for training.

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sau khi build thành công, chúng ta sẽ tiến hành huấn luyện mô hình&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;pio build

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Và chờ đợi dòng này xuất hiện&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;
[INFO] [CoreWorkflow$] Training completed successfully.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cảm ơn các bạn đã theo dõi. Hẹn gặp bạn ở những bài viết tiếp theo.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>