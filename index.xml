<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phạm Duy Tùng Machine Learning Blog</title>
    <link>/</link>
    <description>Recent content on Phạm Duy Tùng Machine Learning Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016-{year} Phạm Duy Tùng. All Rights Reserved.</copyright>
    <lastBuildDate>Fri, 25 Feb 2022 00:19:00 +0300</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dataset nhận dạng khuông mặt</title>
      <link>/courses/ml_dataset/web_face/</link>
      <pubDate>Fri, 25 Feb 2022 00:19:00 +0300</pubDate>
      
      <guid>/courses/ml_dataset/web_face/</guid>
      <description>1. CASIA-WebFace Dataset có kích thước tầm 4.1G, bao gồm 494,414 hình khuôn mặt của 10,575 người thật được thu thập trên web và đã gán nhãn đầy đủ. Dataset này phục vụ cho bài toán face verification và face identification .
https://archive.org/download/NudeNet_classifier_dataset_v1/NudeNet_Classifier_train_data_x320.zip
Đối với các bạn muốn mì ăn liền, thì có thể tải pretrain model NudeNet trên pip về rồi thử.
2. MS-Celeb-1M Tập dataset khuôn mặt gốc được microsoft công bố năm 2016 phục vụ cho bài toán nhận diện khuôn mặt.</description>
    </item>
    
    <item>
      <title>NudeNet Dataset [Dataset nhạy cảm, 18&#43; only]</title>
      <link>/courses/ml_dataset/nunet/</link>
      <pubDate>Fri, 25 Feb 2022 00:19:00 +0300</pubDate>
      
      <guid>/courses/ml_dataset/nunet/</guid>
      <description>Có đôi khi, mình muốn test một model nào đó, nhưng mà mình lại tốn rất nhiều thời gian để tìm kiếm test data. Vì vậy, mình tạo cái tut này để lưu lại những data mình lượm lặt được, phục vụ cho việc tìm kiếm sau này dễ dàng hơn.
Dataset này cung cấp tầm 19G hình ảnh nhạy cảm. Phục vụ cho các bài toán phân loại, nhận dạng và kiểm duyệt nội dung hình ảnh/ video.</description>
    </item>
    
    <item>
      <title>Bài 1: Giới thiệu về C&#43;&#43;</title>
      <link>/courses/cplusplus/1_introduction/</link>
      <pubDate>Sun, 20 Feb 2022 00:19:00 +0300</pubDate>
      
      <guid>/courses/cplusplus/1_introduction/</guid>
      <description>Lịch sử hình thành, phát triển ngôn ngữ c++ C++ là ngôn ngữ lập trình &amp;ldquo;bậc trung&amp;rdquo; được phát triển bởi Bjarne Stroustrup vào năm 1979 tại phòng thí nghiệm Bell Labs. C++ hoạt động được trên nhiều nền tảng khác nhau như Windows, Mac OS, và các phiên bản của UNIX. Series bài học này hướng tới một khóa học đơn giản, với đầy đủ các kiến thức nền tảng của C++ cho người bắt đầu học.</description>
    </item>
    
    <item>
      <title>Bài 2: Cài đặt công cụ hỗ trợ</title>
      <link>/courses/cplusplus/2_ide/</link>
      <pubDate>Sun, 20 Feb 2022 00:19:00 +0300</pubDate>
      
      <guid>/courses/cplusplus/2_ide/</guid>
      <description>Lời giới thiệu Chúng ta cần một phần mềm có chất lượng tốt tốt một chút để hỗ trợ coding nhanh, gọn, lẹ. Các bạn có thể sử dụng các phần mềm miễn phí như Eclipse, NetBean, CodeBlock, Notepad++ &amp;hellip;.
Trong bài viết này, mình đề nghị các bạn cài visual studio hoặc visual studio code. Visual stuido là một phần khá bá đạo, hỗ trợ mạnh mẽ, giúp các bạn lập trình viên coding một cách thoải mái mà không phải vướng bận các vấn đề cấu hình bên ngoài.</description>
    </item>
    
    <item>
      <title>Bài 3: Làm quen với c&#43;&#43;</title>
      <link>/courses/cplusplus/3_steep/</link>
      <pubDate>Sun, 20 Feb 2022 00:19:00 +0300</pubDate>
      
      <guid>/courses/cplusplus/3_steep/</guid>
      <description>Chương trình đầu tiên, Hello World Mã nguồn
1#include &amp;lt;iostream&amp;gt;2using namespace std; 3 4// main() is where program execution begins. 5int main() { 6 cout &amp;lt;&amp;lt; &amp;#34;Hello World. My name AlexBlack.&amp;#34;; // prints Hello World. My name AlexBlack. 7 return 0; 8} Các bạn hãy thực hiện các bước mình mô tả kỹ ở bên dưới
  Mở text editor bất kỳ, ví dụ visual studio code.
  Tạo 1 file text, đặt tên là main.</description>
    </item>
    
    <item>
      <title>Giới thiệu về python</title>
      <link>/courses/python/introduction/</link>
      <pubDate>Sun, 20 Feb 2022 00:19:00 +0300</pubDate>
      
      <guid>/courses/python/introduction/</guid>
      <description>Nội dung khóa học Bài 1: Giới thiệu về C++
Tổng quan ngôn ngữ C++ Tại sao nên học ngôn ngữ C++ Bài 2: Cài đặt môi trường phát triển (IDE) Visual studio 2015
Giới thiệu Microsoft Visual Studio Hướng dẫn download và cài đặt visual studio Bài 3: Xây dựng chương trình C++ đầu tiên với Visual Studio 2015
Một số kiến thức cần lưu ý Cách tạo và biên dịch chương trình C++ đầu tiên trên Visual Studio Một số vấn đề thường gặp đối với lập trình viên mới Bài 4: Cấu trúc một chương trình C++ (Structure of a program)</description>
    </item>
    
    <item>
      <title>Một số cách kiếm thêm thu nhập từ cách cào dữ liệu</title>
      <link>/blog/2021-11-06-some-way-make-momey-from-web-scrapping/</link>
      <pubDate>Sat, 06 Nov 2021 00:19:00 +0300</pubDate>
      
      <guid>/blog/2021-11-06-some-way-make-momey-from-web-scrapping/</guid>
      <description>Giới thiệu Thu thập, tổng hợp thông tin là một ngành nghề đặc thù, có đặc điểm lâu đời. Việc ứng dụng công nghệ thông tin và tự động hoá giúp người dùng tiếp cận thông tin nhanh hơn và đưa ra quyết định chính các hơn. Trong bài viết này, mình sẽ đưa ra một vài gợI ý giúp các bạn là chuyên gia cào cấu dữ liệu có ý tưỞng để tạo nên các sản phẩm đặc biệt phục vụ nhu cầu người dùng.</description>
    </item>
    
    <item>
      <title>Xây dựng chương trình AI đơn giản cho game cờ tướng</title>
      <link>/blog/2021-08-12-china_chess_alpha_beta_ai/</link>
      <pubDate>Thu, 12 Aug 2021 00:19:00 +0300</pubDate>
      
      <guid>/blog/2021-08-12-china_chess_alpha_beta_ai/</guid>
      <description>Giới thiệu Cờ tướng là một môn thể thao khá phổ biến ở Việt Nam. Các bạn có thể bắt gặp các bàn cờ ở các con hẻm của mỗi góc phố. Hoặc là khi các bộ bàn ghế đá thì người mua cũng thường nhờ thợ khắc lên bàn cờ tướng để hàng xóm láng giềng giải trí ngày cuối tuần. Trong bài viết này, mình sẽ hướng dẫn step by step ứng dụng chơi game cờ tướng đơn giản với một chút AI.</description>
    </item>
    
    <item>
      <title>Tìm hiểu package PyCaret trong python</title>
      <link>/blog/2021-07-28-pycaret-flaskapi/</link>
      <pubDate>Tue, 27 Jul 2021 00:19:00 +0300</pubDate>
      
      <guid>/blog/2021-07-28-pycaret-flaskapi/</guid>
      <description>Giới thiệu PyCaret là thư viện open-source machinelearning trong python, Thư viện tích hợp sẵn các mô hình cần thiết, giúp chúng ta train mô hình một lần trên nhiều thuật toán máy học khác nhau. Thư viện có hỗ trợ train trên GPU. Phiên bản hiện tại lúc mình viết bài viết này là 2.3.3. Các bạn có thể tham khảo thông tin thêm của thư viện ở link github https://github.</description>
    </item>
    
    <item>
      <title>Mô hình phân quyền - Access Control</title>
      <link>/blog/2021-07-02-mo-hinh-phan-quyen/</link>
      <pubDate>Fri, 02 Jul 2021 00:19:00 +0300</pubDate>
      
      <guid>/blog/2021-07-02-mo-hinh-phan-quyen/</guid>
      <description>Giới thiệu  Danh sách điều khiển truy cập - Access Control List  Điều khiển truy cập bắt buộc - Mandatory Access Control  Điều khiển truy cập tùy quyền - Discretionary Access Control (DAC)  Điều khiển truy cập theo vai - Role Based Access Control (RBAC)  Điều khiển truy cập theo thuộc tính - Attribute Based Access Control (ABAC)   Danh sách điều khiển truy cập - Access Control List (ACL)  Là mô hình cấp quyền truy cập dựa vào danh sách các quyền</description>
    </item>
    
    <item>
      <title>Nâng cấp WSL lên bản WSL 2 trên window 10</title>
      <link>/blog/2021-05-30-upgrade-wls-to-wls2/</link>
      <pubDate>Sun, 30 May 2021 00:19:00 +0300</pubDate>
      
      <guid>/blog/2021-05-30-upgrade-wls-to-wls2/</guid>
      <description>Giới thiệu Microsoft đã trình làng phiên bản WLS 2 với nhiều điểm cải tiến nổi trội. Trong bài viết này, mình sẽ hướng dẫn các bạn cài đặt wls 2 và upgrade các distro linux của mình xài WLS 2. Mình có một lưu ý nhỏ là nếu các distro linux của bạn không bị ràng gì thì các bạn nên xóa các linux distro hiện tại và cài mới lại linux.</description>
    </item>
    
    <item>
      <title>Tinh chỉnh thuật toán XGBoost  với Learning Curves</title>
      <link>/blog/2021-04-11-xgboost_learning_curves/</link>
      <pubDate>Sun, 11 Apr 2021 00:19:00 +0300</pubDate>
      
      <guid>/blog/2021-04-11-xgboost_learning_curves/</guid>
      <description>Giới thiệu Trong quá trình giải các bài toán có sử dụng machine learning, vì để làm nhanh nên đôi khi mình sẽ sử dụng các tham số mặc định của mô hình để train. Một phần vì lý do chúng ta không biết cách chỉnh các tham só như thế nào, so với cái gì để có mô hình huấn luyện là tốt nhất. Ở bài viết này, mình sẽ sử dụng Learning Curves để tối ưu hóa các tham số của XGBoost.</description>
    </item>
    
    <item>
      <title>Tìm hiểu thuật toán tối ưu hóa Adabelief Optimizer</title>
      <link>/blog/2021-01-15-adabelief-optimizer/</link>
      <pubDate>Fri, 15 Jan 2021 00:19:00 +0300</pubDate>
      
      <guid>/blog/2021-01-15-adabelief-optimizer/</guid>
      <description>Giới thiệu Hi các bạn, lại là mình đây, hôm nay mình sẽ cùng các bạn tìm hiểu thuật toán tối ưu hóa AdaBelief. Thuật toán này được sử dụng để thay cho thuật toán Adam optimizer mà các bạn hiện đang xài để huấn luyện mô hình Deep learning. Nào, chúng ta cùng bắt đầu tìm hiểu nhé.
Ẩn sâu bên trong các thuật toán sử dụng Neural Network và một vài thuật toán machine learning đều sử dụng các hàm tối ưu hóa.</description>
    </item>
    
    <item>
      <title>Reinforcement Learning và tictactoe</title>
      <link>/blog/2020-12-26-tic-tac-toe/</link>
      <pubDate>Sun, 27 Dec 2020 00:19:00 +0300</pubDate>
      
      <guid>/blog/2020-12-26-tic-tac-toe/</guid>
      <description>Advantages of Reinforcement Learning Trong khi trong các phương pháp lý thuyết trò chơi nói chung, ví dụ thuật toán min-max, thuật toán luôn giả định chúng ta có một đối thủ hoàn hảo, công việc phải thực hiện là tối đa hóa phần thưởng của mình và giảm thiểu phần thưởng của đối thủ ( tối đa hóa điểm của mình và tối thiểu hóa điểm của đối thủ), trong học củng cố, chúng ta không cần giả định đối thủ của chúng ta là 1 thiên tài xuất chúng, nhưng chung ta vẫn thu được mô hình với kết quả rất tốt.</description>
    </item>
    
    <item>
      <title>Xây dựng game xếp gạch bằng opencv và python</title>
      <link>/blog/2020-12-25-tetric/</link>
      <pubDate>Sat, 26 Dec 2020 00:19:00 +0300</pubDate>
      
      <guid>/blog/2020-12-25-tetric/</guid>
      <description>Mã nguồn 1 2import cv2 3import numpy as np 4from random import choice 5 6def getColor(): 7	lstColor = [[255,64,64],[255,165,0],[255,244,79],[102,255,0],[172,229,238],[148,87,235],[148,87,235],[241,156,187]] 8	return choice(lstColor) 9 10def getInfo(piece): 11	if piece == &amp;#34;&amp;#34;: 12	coords = np.array([[0, 0]]) 13	elif piece == &amp;#34;I&amp;#34;: 14	coords = np.array([[0, 3], [0, 4], [0, 5], [0, 6]]) 15	elif piece == &amp;#34;T&amp;#34;: 16	coords = np.array([[1, 3], [1, 4], [1, 5], [0, 4]]) 17	elif piece == &amp;#34;L&amp;#34;: 18	coords = np.</description>
    </item>
    
    <item>
      <title>Ngưỡng (thresholding) trong opencv</title>
      <link>/blog/2020-12-24-thresholding/</link>
      <pubDate>Fri, 25 Dec 2020 00:19:00 +0300</pubDate>
      
      <guid>/blog/2020-12-24-thresholding/</guid>
      <description>Giá trị ngưỡng: Nói theo kiểu lúa hóa, trong opencv, ngưỡng là một số nằm trong đoạn từ 0 đến 255. Giá trị ngưỡng sẽ chia tách giá trị độ xám của ảnh thành 2 miền riêng biệt. Miền thứ nhất là tập hợp các điểm ảnh có giá trị nhỏ hơn giá trị ngưỡng. Miền thứ hai là tập hợp các các điểm ảnh có giá trị lớn hơn hoặc bằng giá trị ngưỡng.</description>
    </item>
    
    <item>
      <title>Hai khái niệm quan trọng giúp tăng độ chính xác của các mô hình trong machine learning</title>
      <link>/blog/2020-04-16-two-important-machine-learning-concepts-to-improve-every-model/</link>
      <pubDate>Sun, 26 Jan 2020 00:19:00 +0300</pubDate>
      
      <guid>/blog/2020-04-16-two-important-machine-learning-concepts-to-improve-every-model/</guid>
      <description>Việc huấn luyên mô hình máy học có thể sẽ gây ra cho bạn một chút khó khăn nếu bạn không hiểu những thứ bạn dang làm là đúng hay sai. Trong hầu hết các trường hợp, các mô hình học máy là các &amp;ldquo;hộp đen&amp;rdquo;, chúng ta chỉ có thể &amp;ldquo;nhìn thấy&amp;rdquo; dữ liệu đầu vào và độ chính xác mà mô hình trả ra. Chúng ta không biết bên trong nó đang làm cái gì.</description>
    </item>
    
    <item>
      <title>Simhash</title>
      <link>/blog/2020-01-26-simhash/</link>
      <pubDate>Sun, 26 Jan 2020 00:19:00 +0300</pubDate>
      
      <guid>/blog/2020-01-26-simhash/</guid>
      <description>Đặt vấn đề Giả sử bạn và tôi đều thích nghe nhạc trên trang mp3.zing.vn. Mỗi người đều nghe khoảng 100 bài nhạc khác nhau. Để đo sự giống nhau giữa danh sách bài hát bạn nghe và danh sách bài hát tôi nghe, thông thường chúng ta sẽ dùng độ đo Jaccard Similarity, được đo bằng cách lấy phần giao (intersection ) chia cho phần hợp (union). Nghĩa là đếm số lượng bài hát cả hai cùng nghe (phần giao) chia cho tổng số bài hát không lặp của cả hai.</description>
    </item>
    
    <item>
      <title>Các hàm hash có sẵn trong python</title>
      <link>/blog/2020-01-13-hash-in-python/</link>
      <pubDate>Sat, 25 Jan 2020 00:19:00 +0300</pubDate>
      
      <guid>/blog/2020-01-13-hash-in-python/</guid>
      <description>Built-In Hashing Python có xây dựng sẵn cho chúng ta một hàm hash, chúng ta cứ việc gọi ra và sử dụng.
1hash(&amp;#34;pham duy tung&amp;#34;) 2-7141560399917772220 Một lưu ý nhỏ là giá trị của hàm hash sẽ khác nhau giữa các phiên bản python. Ví dụ ở trên mình xài python 3.8, với bản 3.6 sẽ là
1hash(&amp;#34;pham duy tung&amp;#34;) 21568935795476364190 Checksums Chúng ta có thể sử dụng checksums để hash dữ liệu.</description>
    </item>
    
    <item>
      <title>Tìm hiểu Non-maximum Suppression (NMS)</title>
      <link>/blog/2019-12-25-nms/</link>
      <pubDate>Fri, 13 Dec 2019 00:19:00 +0300</pubDate>
      
      <guid>/blog/2019-12-25-nms/</guid>
      <description>Đặt vấn đề Sau khi thực hiện object detection feed một ảnh qua mạng neural, chúng ta sẽ thu được rất nhiều proposals (như hình ở dưới). Ở trạng thái này, có rất nhiều proposals là boding box cho một object duy nhất, điều này dẫn tới việc dư thừa. Chúng ta sử dụng thuật toán Non-maximum suppression (NMS) để giải quyết bài toán này.
Hình 1: Proposals box, hình được cắt từ bài báo</description>
    </item>
    
    <item>
      <title>Tìm hiểu mạng AlexNet, mô hình giành chiến thắng tại cuộc thi ILSVRC 2012</title>
      <link>/blog/2019-05-27-alexnet/</link>
      <pubDate>Mon, 27 May 2019 00:12:00 +0300</pubDate>
      
      <guid>/blog/2019-05-27-alexnet/</guid>
      <description>Trong bài viết này, chúng ta sẽ tìm hiểu mô hình AlexNet từ nhóm của giáo sư Hinton. Tới thời điểm hiện tại (2019-05-27), bài viết của giáo sư đã có hơn 40316 lượt trích dẫn. Bài báo này có bước đóng góp cực kỳ quan trọng, là một đột phá lớn trong lĩnh vực deep learning, mở đầu cho sự quay lại của mạng neural network và đóng góp trực tiếp vào thành công của những chương trình trí tuệ nhân tạo tại thời điểm hiện tại.</description>
    </item>
    
    <item>
      <title>Tìm hiểu mạng MobileNetV1</title>
      <link>/blog/2019-05-26-mobilenetv1/</link>
      <pubDate>Sat, 25 May 2019 00:12:00 +0300</pubDate>
      
      <guid>/blog/2019-05-26-mobilenetv1/</guid>
      <description>Trong bài viết này, chúng ta sẽ tìm hiểu mô hình MobileNetV1 từ nhóm tác giả đến từ Google. Điểm cải tiến (chắc là cải tiến :) của mô hình là sử dụng một cách tính tích chập có tên là Depthwise Separable Convolution để giảm kích thước mô hình và giảm độ phức tạp tính toán. Do đó, mô hình sẽ hữu ích khi chạy các ứng dụng trên di động và các thiết bị nhúng.</description>
    </item>
    
    <item>
      <title>Contour</title>
      <link>/blog/2019-05-26-contours/</link>
      <pubDate>Fri, 24 May 2019 00:12:00 +0300</pubDate>
      
      <guid>/blog/2019-05-26-contours/</guid>
      <description>Contour là gì Các bạn có thể hiểu contour là &amp;ldquo;tập các điểm-liên-tục tạo thành một đường cong (curve) (boundary), và không có khoảng hở trong đường cong đó, đặc điểm chung trong một contour là các các điểm có cùng /gần xấu xỉ một giá trị màu, hoặc cùng mật độ. Contour là một công cụ hữu ích được dùng để phân tích hình dạng đối tượng, phát hiện đối tượng và nhận dạng đối tượng&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Tìm hiểu về dropout trong deep learning, machine learning</title>
      <link>/blog/2019-05-05-deep-learning-dropout/</link>
      <pubDate>Sun, 05 May 2019 00:12:00 +0300</pubDate>
      
      <guid>/blog/2019-05-05-deep-learning-dropout/</guid>
      <description>1. Dropout là gì, nó có ý nghĩa gì trong mạng neural network Theo Wikipedia, thuật ngữ &amp;ldquo;dropout&amp;rdquo; đề cập đến việc bỏ qua các đơn vị (unit) (cả hai hidden unit và visible unit) trong mạng neural network.
Hiểu đơn giản là, trong mạng neural network, kỹ thuật dropout là việc chúng ta sẽ bỏ qua một vài unit trong suốt quá trình train trong mô hình, những unit bị bỏ qua được lựa chọn ngẫu nhiên.</description>
    </item>
    
    <item>
      <title>Các kỹ thuật lấy mẫu</title>
      <link>/blog/2019-05-04-sampling-method/</link>
      <pubDate>Sat, 04 May 2019 00:12:00 +0300</pubDate>
      
      <guid>/blog/2019-05-04-sampling-method/</guid>
      <description>Lấy mẫu dữ liệu là một kỹ thuật rất quang trọng trong thống kê, là yếu tố quan trọng góp phần xác định độ chính xác của research/ survey. Nếu có bất kỳ sai sót gì trong quá trình lấy mẫu, nó sẽ ảnh hưởng trực tiếp đến kết quả cuối cùng. Có rất nhiều kỹ thuật giúp chúng ta thu thập mẫu dựa trên nhu cầu và tình huống chúng ta cần.</description>
    </item>
    
    <item>
      <title>PredictionIO Phần 1 - Hướng dẫn cài đặt</title>
      <link>/blog/2019-05-04-setup-predictio/</link>
      <pubDate>Fri, 03 May 2019 00:12:00 +0300</pubDate>
      
      <guid>/blog/2019-05-04-setup-predictio/</guid>
      <description>1. Giới thiệu về PredictionIO PredictionIO là một &amp;ldquo;open source Machine Learning Server built on top of a state-of-the-art open source stack&amp;rdquo; giúp cho các developers và các data scientists tạo ra các engine dự đoán trong học máy. PredictionIO giúp chúng ta
  Xây dựng và triển khai các ứng dụng, dịch vụ một cách nhanh chóng bằng cách tuỳ chỉnh lại các template đã sẵn có.
  Trả lời các câu truy vấn động trong thời gian thực.</description>
    </item>
    
    <item>
      <title>PredictionIO Phần 2 - Cài đặt chương trình demo</title>
      <link>/blog/2019-05-07-predictio-mini-demo1/</link>
      <pubDate>Fri, 03 May 2019 00:12:00 +0300</pubDate>
      
      <guid>/blog/2019-05-07-predictio-mini-demo1/</guid>
      <description>1. Tạo chương trình đầu tiên bằng PredictionIO Đầu tiên, các bạn hãy tạo thư mục template ở đâu đó. Mình sẽ tạo ở trong thư mục /data/pio. Đường dẫn của mình sẽ là /data/pio/template
1mdkir /data/pio/template Tiếp theo, chúng ta sẽ clone templte trên github về, các bạn thực hiện lệnh sau
1git clone https://github.com/apache/predictionio-template-recommender.git 2cd predictionio-template-recommender Tiếp theo, chúng ta sẽ tạo một app đầu tiên, mình đặt tên là ourrecommendation, các bạn thích đặt tên gì thì đặt nha.</description>
    </item>
    
    <item>
      <title>Phân nhóm các thuật toán học máy</title>
      <link>/blog/2019-04-19-deep-learning-view/</link>
      <pubDate>Fri, 19 Apr 2019 00:12:00 +0300</pubDate>
      
      <guid>/blog/2019-04-19-deep-learning-view/</guid>
      <description>Ở bài trước mình đã trình bày định nghĩa và một số ứng dụng của Máy học (Machine Learning – ML), phân biệt ML với Trí tuệ nhân tạo (Artificial Intelligence – AI) cũng như mối quan hệ giữa AI, ML và Big Data. Từ bài viết này trở đi mình sẽ tập trung viết về ML, các thuật toán, cách sử dụng công cụ kèm theo một vài demo nhỏ giúp bạn đọc dễ hình dung và áp dụng.</description>
    </item>
    
    <item>
      <title>Phân loại hoa sử dụng pretrain model</title>
      <link>/blog/2019-04-15-phan-loai-hoa/</link>
      <pubDate>Mon, 15 Apr 2019 00:19:00 +0300</pubDate>
      
      <guid>/blog/2019-04-15-phan-loai-hoa/</guid>
      <description>Lời mở đầu Ở trong bài viết này, chúng ta sẽ sử dụng tập dữ liệu là tập dữ liệu ở ở link https://www.kaggle.com/alxmamaev/flowers-recognition. Tập dữ liệu này bao gồm 4242 hình cảnh của 5 loại hoa hồng (rose), hoa mặt trời (sunflower), hoa bồ công anh (dandelion), hoa cúc (daisy) và hoa tulip. Nhóm tác giả đã thu thập dữ liệu dựa trên các trang web flicr, google images, yandex.</description>
    </item>
    
    <item>
      <title>Dự đoán doanh số bán của các cửa hàng walmart</title>
      <link>/blog/2019-04-17-walmart-store-sales-forecasting/</link>
      <pubDate>Mon, 15 Apr 2019 00:09:00 +0300</pubDate>
      
      <guid>/blog/2019-04-17-walmart-store-sales-forecasting/</guid>
      <description>Nghiên cứu dữ liệu Trong thực tế, Walmart đã chạy các chương trình khuyến mãi trong các ngày lễ lớn trong năm. Có 4 ngày lễ lớn đó là Siêu cúp bóng bầu dục Mỹ (Super Bowl - tổ chức vào chủ nhật đầu tiên của tháng Hai. Đây là một sự kiện thể thao lớn và ngày tổ chức Super Bowl được người Mỹ coi là ngày lễ quốc gia của Hoa Kỳ (theo wiki https://vi.</description>
    </item>
    
    <item>
      <title>Thử làm ứng dụng tô màu ảnh xám thành ảnh màu sử dụng tensorflow</title>
      <link>/blog/2019-04-16-colorfull-grayscale-to-color/</link>
      <pubDate>Sun, 14 Apr 2019 00:13:00 +0300</pubDate>
      
      <guid>/blog/2019-04-16-colorfull-grayscale-to-color/</guid>
      <description>Thực hiện Đây là một bài toán tiếp cận bằng Deep Learning, nên việc thu thập nhiều dữ liệu có ý nghĩa rất quang trọng trong việc đóng góp vào độ chính xác của mô hình. Ở đây, chúng ta sẽ download tập dữ liệu ảnh của http://places2.csail.mit.edu/download.html và sử dụng mạng UNet để huấn luyện mô hình.
Thu thập hình ảnh và tiền xử lý Dữ liệu sẽ được download tại địa chỉ http://data.</description>
    </item>
    
    <item>
      <title>Dự đoán giá cổ phiếu bằng mô hình mạng Echo State Networks</title>
      <link>/blog/2019-04-04-predicting-stock-prices-with-echo-state-networks/</link>
      <pubDate>Thu, 04 Apr 2019 00:13:00 +0300</pubDate>
      
      <guid>/blog/2019-04-04-predicting-stock-prices-with-echo-state-networks/</guid>
      <description>Trong cuốn The West Wing Script Book của Aaron Sorkin, ông ấy đã có một câu như thế này &amp;ldquo;There (is) order and even great beauty in what looks like total chaos. If we look closely enough at the randomness around us, patterns will start to emerge.&amp;rdquo;. Mình xin phép không dịch câu nói trên ra, bởi vì mình dịch khá tệ, và câu nói này khá nổi tiếng (đã được trích dẫn khá nhiều trên các bài viết của các bloger khác).</description>
    </item>
    
    <item>
      <title>Các lý do mạng neural network không hoạt động không chính xác</title>
      <link>/blog/2019-04-02-37-reason-neural-network-not-working/</link>
      <pubDate>Tue, 02 Apr 2019 00:13:00 +0300</pubDate>
      
      <guid>/blog/2019-04-02-37-reason-neural-network-not-working/</guid>
      <description>Bạn huấn luyện một hình mất hơn 12 tiếng đồng hồ. Mọi thứ khá ổn: loss function giảm. Nhưng khi bạn mang mô hình ra predict thì điều tồi tệ nhất xảy ra: Tất cả trả về đều là 0, không có cái nào nhận dạng chính xác cả. &amp;ldquo;Điều gì đã xảy ra, bạn đã làm gì sai?&amp;rdquo;. Bạn hỏi máy tính, nó không trả lời bạn. Bạn đập bàn, đập ghế trong cơn tức giận và chẳng giải quyết được điều gì cả.</description>
    </item>
    
    <item>
      <title>Trí tuệ nhân tạo, Máy học, Dữ liệu lớn</title>
      <link>/blog/2019-04-02-deep-learning-view/</link>
      <pubDate>Tue, 02 Apr 2019 00:12:00 +0300</pubDate>
      
      <guid>/blog/2019-04-02-deep-learning-view/</guid>
      <description>Trong vài năm trở lại đây (khoảng từ 2013) truyền thông trong và ngoài nước có khá nhiều bài viết giật tít về “Cách mạng công nghiệp lần thứ tư” hay “Thời đại công nghiệp 4.0”. Cùng với các cụm từ này, “Trí tuệ nhân tạo”, “Máy học”, “Dữ liệu lớn” lại được nhắc đến với tần suất cao hơn. Vậy thì những thuật ngữ này có ý nghĩa gì và giữa chúng có mối liên hệ nào với nhau hay không?</description>
    </item>
    
    <item>
      <title>Tìm hiểu Mask R-CNN và ví dụ phân vùng quả bóng bay sử dụng deep learning</title>
      <link>/blog/2019-03-25-mask-rcnn-balloon/</link>
      <pubDate>Mon, 25 Mar 2019 00:12:00 +0300</pubDate>
      
      <guid>/blog/2019-03-25-mask-rcnn-balloon/</guid>
      <description>Bắt đầu Đầu tiên, chúng ta sẽ download tập dataset balloon tại https://github.com/matterport/Mask_RCNN/releases/download/v2.1/balloon_dataset.zip, giải nén và bỏ trong thư mục datasets. Tiếp đó, các bạn donwload file balloon.py và visualize.py về. File đầu tiên hỗ trợ chúng ta đọc dữ liệu của dataset balloon và file thứ hai hỗ trợ visualize hình ảnh một cách trực quan. Cả hai file mình đều lấy mã nguồn của Matterport trên https://github.com/matterport/Mask_RCNN/ Tiến hành import các thư viện cần thiết về.</description>
    </item>
    
    <item>
      <title>Thêm dấu tiếng việt cho câu không dấu</title>
      <link>/blog/2019-03-16-vietnamese-accent/</link>
      <pubDate>Sat, 16 Mar 2019 00:12:00 +0300</pubDate>
      
      <guid>/blog/2019-03-16-vietnamese-accent/</guid>
      <description>Thêm dấu tiếng việt là một trong những bài toán khá hay trong xử lý ngôn ngữ tự nhiên. Ở đây, mình đã tiến hành thu thập dữ liệu bài báo của nhiều nguồn khác nhau như zing.vn, vnexpress, kenh14.vn &amp;hellip; làm kho ngữ liệu và xây dựng mô hình.
Để tiến hành thực nghiệm, mình sẽ lấy một số đoạn văn mẫu ở trang tin tức của thế giới di động (https.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Thông tin đang được cập nhật.</description>
    </item>
    
    <item>
      <title>Team Of Services</title>
      <link>/teamofservices/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/teamofservices/</guid>
      <description>ĐIỀU KHOẢN SỬ DỤNG Thỏa thuận sử dụng và bảo mật này (sau đây gọi là “Thỏa thuận”) được lập ra bởi và giữa bạn (“bạn”) và Công ty Cổ phần công nghệ ePi (“ePi” hoặc “chúng tôi”) về việc sử dụng bất kỳ hay tất cả các loại dịch vụ (“Dịch vụ”) của Baomoi.com (“Baomoi”) của bạn. Bằng việc sử dụng Dịch vụ, bạn đồng ý chịu ràng buộc bởi những điều khoản và điều kiện này.</description>
    </item>
    
    <item>
      <title>Tối ưu hoá ngẫu nhiên - Bài toán người giao hàng</title>
      <link>/blog/2019-02-08-randomized-optimization-in-python-v1/</link>
      <pubDate>Fri, 08 Feb 2019 00:12:00 +0300</pubDate>
      
      <guid>/blog/2019-02-08-randomized-optimization-in-python-v1/</guid>
      <description>Bài toán người giao hàng là gì Người giao hàng là bài toán cơ bản trong nhóm bài toán tối ưu. Bài toán được phát biểu như sau: Có một người giao hàng cần đi giao hàng tại n thành phố. Xuất phát từ một thành phố nào đó, đi qua các thành phố khác để giao hàng và trở về thành phố ban đầu. Mỗi thành phố chỉ đến một lần, khoảng cách từ một thành phố đến các thành phố khác là xác định được.</description>
    </item>
    
    <item>
      <title>Tối ưu hoá ngẫu nhiên</title>
      <link>/blog/2019-02-08-getting-started-with-randomized-optimization-in-python/</link>
      <pubDate>Fri, 08 Feb 2019 00:09:00 +0300</pubDate>
      
      <guid>/blog/2019-02-08-getting-started-with-randomized-optimization-in-python/</guid>
      <description>Bài toán tối ưu hoá là gì Theo Russell and Norvig bài toán tối ưu hoá là bài toán mà &amp;ldquo;the aim is to find the best state according to an objective function&amp;rdquo; (mình xin phép để nguyên câu tiếng anh).
Trong đó, state trong từ best state phụ thuộc vào ngữ cảnh của bài toán. Ví dục
 Trong ngữ cảnh là mạng neural network, state chính là các trọng số (weight), best state là tìm các trọng số tối ưu Trong bài toán 8 hậu, state là vị trí của các con hậu, best state là vị trí tốt nhất thoả yêu cầu, cũng chính là lời giải.</description>
    </item>
    
    <item>
      <title>Hệ thống tín dụng xã hội của Trung Quốc - Những ảnh hưởng khi bạn có điểm xã hội thấp</title>
      <link>/blog/2019-02-07-china-social-creadit-system/</link>
      <pubDate>Thu, 07 Feb 2019 00:09:00 +0300</pubDate>
      
      <guid>/blog/2019-02-07-china-social-creadit-system/</guid>
      <description>Chính quyền Trung Quốc đang xây dựng một hệ thống xếp hạng có tên là &amp;quot; Hệ thống tín dụng xã hội - social credit system&amp;quot;. Hệ thống được xây dựng nhằm mục đích theo dõi hành vi của công dân và xếp hạng tất cả các hành vi trên.
Theo một tài liệu cho biết,&amp;ldquo;Hệ thống tín dụng xã hội&amp;rdquo;, lần đầu tiên được công bố vào năm 2014, nhằm mục đích củng cố ý tưởng rằng &amp;ldquo;giữ niềm tin là vinh quang và phá vỡ niềm tin là ô nhục&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Lựa chọn siêu tham số cho mô hình LSTM đơn giản sử dụng Keras</title>
      <link>/blog/2019-02-06-choosing-the-right-hyperparameters-for-a-simple-lstm-using-keras/</link>
      <pubDate>Wed, 06 Feb 2019 00:20:00 +0300</pubDate>
      
      <guid>/blog/2019-02-06-choosing-the-right-hyperparameters-for-a-simple-lstm-using-keras/</guid>
      <description>Mở đầu Việc xây dựng một mô hình machine learning chưa bao giờ thật sự dễ dàng. Rất nhiều bài báo chỉ &amp;ldquo;show hàng&amp;rdquo; những thứ cao siêu, những thứ chỉ nằm trong sự tưởng tượng của chính các nhà báo. Còn khi đọc các bài báo khoa học về machine learning, tác giả công bố cho chúng ta những mô hình rất tốt, giải quyết một domain nhỏ vấn đề của họ.</description>
    </item>
    
    <item>
      <title>Giảm bộ nhớ sử dụng trong python</title>
      <link>/blog/2019-02-06-how-to-reduce-memory-consumption-by-half-by-adding-just-one-line-of-code/</link>
      <pubDate>Wed, 06 Feb 2019 00:19:00 +0300</pubDate>
      
      <guid>/blog/2019-02-06-how-to-reduce-memory-consumption-by-half-by-adding-just-one-line-of-code/</guid>
      <description>Mở đầu Bắt đầu bằng một class đơn giản như sau:
1class DataItem(object): 2 def __init__(self, name, age, address): 3 self.name = name 4 self.age = age 5 self.address = address Bạn nghĩ một đối tượng của class trên sẽ chiếm bao nhiêu bộ nhớ. Chúng ta cùng tiến hành một vài thí nghiệm nho nhỏ bên dưới.
1dx = DataItem(&amp;#34;Alex Black&amp;#34;, 42, &amp;#34;-&amp;#34;) 2print (&amp;#34;sys.getsizeof(dx):&amp;#34;, sys.getsizeof(dx)) 3&amp;gt;&amp;gt; sys.getsizeof(dx): 56 Kết quả ra là 56 bytes, khá hợp lý phải không các bạn.</description>
    </item>
    
    <item>
      <title>5 mẹo hay sử dụng python</title>
      <link>/blog/2019-02-05-5-python-tricks-you-need-to-know-today/</link>
      <pubDate>Tue, 05 Feb 2019 00:19:00 +0300</pubDate>
      
      <guid>/blog/2019-02-05-5-python-tricks-you-need-to-know-today/</guid>
      <description>Mở đầu Hiện nay, có rất nhiều thư viện do cộng đồng đóng góp và xây dựng. Ví dụ như biopython trong tin sinh học, pandas (data science), keras/tensorflow (machine learning), astropy ( cho thiên văn học - astronomy). Trước khi bắt đầu đọc bài viết này, bạn đên đọc &amp;ldquo;Python Tricks Book&amp;rdquo; của Dan Bader trước (https://dbader.org/products/python-tricks-book/). Trong sách, anh ấy đã chia sẻ một số lời khuyên và mẹo về các code python hiệu quả hơn.</description>
    </item>
    
    <item>
      <title>Hệ thống gợi ý khoá học cho website DonorChoose.org</title>
      <link>/blog/2019-01-03-donor-project-matching-with-recommender-systems/</link>
      <pubDate>Tue, 11 Dec 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2019-01-03-donor-project-matching-with-recommender-systems/</guid>
      <description>Đặt vấn đề DonorsChoose.org được thành lập vào năm 2000 bởi một giáo viên lịch sử tại Mỹ tên là Bronx và đã huy động được 685 triệu đô la cho các lớp học. 3/4 các giáo viên ở các trường công lập ở Hoa Kỳ đã sử dụng Donor để gửi các yêu cầu bài tập cho học sinh. Từ đó, Donor trở thành nền tảng giáo dục hàng đầu hỗ trợ cho các vấn đề giáo dục công cộng.</description>
    </item>
    
    <item>
      <title>Một số mẹo để lựa chọn mô hình object detection</title>
      <link>/blog/2018-12-11-a-bunch-of-tips-and-tricks-for-training-deep-neural-networks/</link>
      <pubDate>Tue, 11 Dec 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-12-11-a-bunch-of-tips-and-tricks-for-training-deep-neural-networks/</guid>
      <description>Lời mở đầu Việc huấn luyện một mô hình neural network khá đơn giản, chỉ việc download code mẫu về, quăng tập data của mình vào, rồi cho chạy, xong. Nhưng khó khăn ở đây là làm cách nào để nâng độ chính xác của mô hình lên. Ở bài viết này, chúng ta sẽ tìm hiểu một số cách giúp tăng độ chính xác của mô hình.
Kiểm tra dữ liệu   Thực chất, chúng ta phải hiểu rõ kỹ chúng ta đang có những gì trong tay, thì chúng ta mới dạy cho máy học đủ và đúng được.</description>
    </item>
    
    <item>
      <title>Lựa chọn mô hình object detectors</title>
      <link>/blog/2018-12-10-design-choices-lessons-learned-and-trends-for-object-detections/</link>
      <pubDate>Mon, 10 Dec 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-12-10-design-choices-lessons-learned-and-trends-for-object-detections/</guid>
      <description>Lời mở đầu Các thuật toán phát hiện đối tượng, như các thuật toán thuộc nhóm region proposal hoặc single shot đầu bắt đầu bởi những ý tưởng khác nhau, nhưng sau qua một vài quá trình cập nhật và nâng cấp cho đến thời điểm hiện tại, mô hình chung của chúng đã gần gần giống nhau hơn. Và hai thuật toán trên là hai thuật toán tiêu biểu cạnh tranh nhau danh hiệu thuật toán phát hiện đối tượng nhanh nhất và thuật toán nhận diện chính xác nhất.</description>
    </item>
    
    <item>
      <title>Tìm hiểu single shot object detectors</title>
      <link>/blog/2018-12-06-what-do-we-learn-from-single-shot-object-detection/</link>
      <pubDate>Thu, 06 Dec 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-12-06-what-do-we-learn-from-single-shot-object-detection/</guid>
      <description>Single Shot detectors Ở bài trước, chúng ta đã tìm hiểu về region proposal và ứng dụng của nó vào Faster R-CNN. Các thuật toán thuộc nhóm region proposal tuy cho kết quả có độ chính xác cao, nhưng chúng có một nhược điểm rất lớn là thời gian huấn luyện và đưa quyết định rất chậm. Faster R-CNN xử lý khoảng 7 FPS trên tập dữ liệu PASCAL VOC 2007.</description>
    </item>
    
    <item>
      <title>Tìm hiểu region based object detectors</title>
      <link>/blog/2018-12-05-what-do-we-learn-from-object-detection-p1/</link>
      <pubDate>Wed, 05 Dec 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-12-05-what-do-we-learn-from-object-detection-p1/</guid>
      <description>Sliding-window detectors Bắt đầu từ năm 2012, sau khi mạng AlexNet giành giải nhất cuộc thi 2012 ILSVRC, mọi nghiên cứu về phân lớp dữ liệu đều sử dụng mạng CNN. Kể từ đó đến đây, CNN được coi như là thuật toán thống trị trên mọi publish paper về các bài toán phân lớp đối tượng. Trong khi đó, để nhận dạng 1 đối tượng trong ảnh, các đơn giản nhất là thiết lập một cửa sổ trượt có kích thước là window size trượt từ trái qua phải, từ trên xuống dưới, quét qua toàn bộ bức ảnh.</description>
    </item>
    
    <item>
      <title>Phân tích giỏ hàng của website instacart</title>
      <link>/blog/2018-11-13-instacart-market-basket-analysis/</link>
      <pubDate>Tue, 13 Nov 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-11-13-instacart-market-basket-analysis/</guid>
      <description>Lời mở đầu Instacart là một startup cung ứng đồ tạp hóa qua website và ứng dụng di động. Người dùng chỉ cần chọn đồ muốn mua tại các chuỗi bán lẻ và đặt đồ, Instacart sẽ đi mua và giao đến tận tay họ. Đến nay, Instacart hoạt động tại 15.000 cửa hàng tạp hoá tại 4.000 thành phố với khoảng 50.000 “trợ lý mua sắm”. Team data science của instacart đóng vai trò rất quan trọng trong việc cung cấp trải nghiệm người dùng trong việc sử dụng app để mua hàng.</description>
    </item>
    
    <item>
      <title>Dự đoán giá chứng khoán SP500 sử dụng LSTM</title>
      <link>/blog/2018-11-10-stock-prediction_v1/</link>
      <pubDate>Sat, 10 Nov 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-11-10-stock-prediction_v1/</guid>
      <description>Lời mở đầu Ở bài viết này, mình sẽ xây dựng mô hình hơn giản để áp dụng vào tập dữ liệu giá chứng khoáng. Mục tiêu của bài này là chúng ta sẽ dự đoán chỉ số S&amp;amp;P 500 sử dụng LSTM. Các bạn có nhu cầu tìm hiểu thêm về chỉ số sp 500 có thể đọc thêm ở https://vi.wikipedia.org/wiki/S%26P_500. Đây là một ứng dụng nhỏ, không có ý nghĩa nhiều ở thực tế do khi phân tích chứng khoán, ta còn xét thêm rất nhiều yếu tố phụ nữa.</description>
    </item>
    
    <item>
      <title>Dự đoán chứng khoán sử dụng tensorflow</title>
      <link>/blog/2018-11-03-stock-prediction/</link>
      <pubDate>Sat, 03 Nov 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-11-03-stock-prediction/</guid>
      <description>Lời mở đầu Ở bài viết này, mình sẽ xây dựng mô hình hơn giản để áp dụng vào tập dữ liệu giá chứng khoán. Mục tiêu của bài này là chúng ta sẽ dự đoán chỉ số S&amp;amp;P 500 dựa trên chỉ số của 500 mã chứng khoán. Các bạn có nhu cầu tìm hiểu thêm về chỉ số sp 500 có thể đọc thêm ở https://vi.wikipedia.org/wiki/S%26P_500. Đây là một ứng dụng nhỏ, không có ý nghĩa nhiều ở thực tế do khi phân tích chứng khoán, ta còn xét thêm rất nhiều yếu tố phụ nữa.</description>
    </item>
    
    <item>
      <title>Overview of gradient descent optimization algorithm</title>
      <link>/blog/2018-11-01-overview-of-gradient-descent-optimization-algorithm/</link>
      <pubDate>Mon, 29 Oct 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-11-01-overview-of-gradient-descent-optimization-algorithm/</guid>
      <description>Lời mở đầu Sau khi thực hiện bài phân loại chó mèo bằng keras, mình phát hiện rằng keras có hỗ trợ rất nhiều thuật toán tối ưu hoá https://keras.io/optimizers/. Nhân dịp rãnh rỗi, mình sẽ tổng hợp lại một vài thuật toán mà keras hỗ trợ.
Dẫn nhập Tại thời điểm hiện tại, Gradient descent là một trong những thuật toán phổ biến được sử dụng để tối ưu hoá mạng neural networks.</description>
    </item>
    
    <item>
      <title>Phân loại chó mèo sử dụng pretrain model</title>
      <link>/blog/2018-10-29-phan-loai-cho-meo/</link>
      <pubDate>Mon, 29 Oct 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-10-29-phan-loai-cho-meo/</guid>
      <description>Lời mở đầu Bài toán phân loại chó mèo là bài toán khá cũ tại thời điểm hiện tại. Tuy nhiên, đối với các bạn mới bước chân vào con đường machine learning thì đây là một trong những bài toán cơ bản để các bạn thực hành sử dụng và tìm hiểu thư viện mà mình đang có. Ở đây, chúng ta sẽ sử dụng pretrain model có sẵn của kares áp dụng trên tập dữ liệu.</description>
    </item>
    
    <item>
      <title>Mask R-CNN trong bài toán nhận dạng và phân vùng đối tượng</title>
      <link>/blog/2018-10-08-mask-rnn/</link>
      <pubDate>Mon, 08 Oct 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-10-08-mask-rnn/</guid>
      <description>Lời mở đầu Phân vùng đối tượng là một bài toán khá phổ biến trong lĩnh vực computer vision. Trong open cv có hỗ trợ cho chúng ta một số hàm để phân vùng đối tượng rất dễ sử dụng. Đặc điểm chung của các hàm này là độ chính xác không được cao cho lắm. Ở bài viết này, chúng ta sẽ tìm hiểu cách sử dụng mô hình pretrain của DNN để phân vùng các đối tượng trong ảnh.</description>
    </item>
    
    <item>
      <title>Deep Learning based Multiple Human Pose Estimation using OpenCV</title>
      <link>/blog/2018-10-05-deep-learning-base-multiple-human-pose-estimation/</link>
      <pubDate>Fri, 05 Oct 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-10-05-deep-learning-base-multiple-human-pose-estimation/</guid>
      <description>Lời mở đầu Lưu ý: Để sử dụng được các mô hình trong bài viết này, bạn phải sử dụng phiên bản opencv &amp;gt; 3.4.1.
Ở bài viết trước, chúng ta đã tìm hiểu cách thức rút trích khung xương sử dụng DNN và đã áp dụng thành công trên ảnh có chứa 1 đối tượng người. Trong bài viết này, chúng ta sẽ thực hiện áp dụng mô hình cho bài toán có nhiều người trong cùng 1 bức ảnh.</description>
    </item>
    
    <item>
      <title>Deep Learning based Human Pose Estimation using OpenCV</title>
      <link>/blog/2018-10-04-deep-learning-base-human-pose-estimation/</link>
      <pubDate>Thu, 04 Oct 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-10-04-deep-learning-base-human-pose-estimation/</guid>
      <description>Lời mở đầu Để sử dụng được các mô hình trong bài viết này, bạn phải sử dụng phiên bản opencv &amp;gt; 3.4.1.
Pose Estimation là gì? 
Post Estimation ( đôi khi được dùng với thuật ngữ Keypoint Detection) là một vấn đề khá phổ biến trong lĩnh vực xử lý ảnh khi chúng ta cần xác định vị trí và hướng của một đối tượng. Mức ý nghĩa ở đây là chúng ta phải rút ra được những đặc điểm chính, những đặc điểm đó là những đặc trưng của đối tượng ( có thể mô tả được đối tượng).</description>
    </item>
    
    <item>
      <title>Phân biệt Epoch - Batch size và Iterations</title>
      <link>/blog/2018-10-02-understanding-epoch-batchsize-iterations/</link>
      <pubDate>Tue, 02 Oct 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-10-02-understanding-epoch-batchsize-iterations/</guid>
      <description>Lời mở đầu Khi mới bắt đầu bước vào thế giới của ML/DL chúng ta sẽ bắt gặp các thuật ngữ Epoch - Batch size và Iterations. Và sẽ cảm thấy bối rối vì chúng khá giống nhau, nhưng thực tế là chúng khác xa nhau.
Để cho dễ hình dung, mình lấy ví dụ về việc ăn cơm. Chúng ta không thể ăn một lần hết một chén cơm được, mà phải mỗi lần ăn phải xúc từng muỗn ăn.</description>
    </item>
    
    <item>
      <title>Xây dựng chương trình gợi ý phim dựa vào tập dữ liệu movie len</title>
      <link>/blog/2018-10-01-buiding-a-movie-model/</link>
      <pubDate>Mon, 01 Oct 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-10-01-buiding-a-movie-model/</guid>
      <description>Lời mở đầu MovieLens là một tập dữ liệu được sử dụng rộng rãi cách đây nhiều năm. Hôm nay, mình sẽ sử dụng tập dữ liệu này và mô hình ALS của spark để xây dựng chương trình dự đoán phim cho người dùng.
Chuẩn bị dữ liệu Các bạn có thể download tập dữ liệu MovieLens ở link https://grouplens.org/datasets/movielens/. Các bạn có thể download trực tiếp 2 file nén ở link http://files.</description>
    </item>
    
    <item>
      <title>Tìm hiểu về mạng neural network AlexNet</title>
      <link>/blog/2018-06-15-understanding-alexnet/</link>
      <pubDate>Fri, 15 Jun 2018 00:19:00 +0300</pubDate>
      
      <guid>/blog/2018-06-15-understanding-alexnet/</guid>
      <description>Lời mở đầu Tỷ phú Peter Thiel đã từng đưa ra câu hỏi tréo ngoe như thế này: &amp;ldquo;What important truth do very few people agree with you on?&amp;rdquo;
Nếu bạn đem câu này hỏi giáo sư Geoffrey Hinton vào năm 2010, ông ấy sẽ trả lời rằng mạng Convolutional Neural Networks (CNN) sẽ có bước đột phá lớn và giúp chúng ta giải quyết hoàn toàn bài toán phân loại ảnh.</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/10_references/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/10_references/</guid>
      <description>Chapter 9: References Introduction to References Declaring and using references Comparing pointers and references References and const</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/11_string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/11_string/</guid>
      <description>Chapter 10: Character Manipulation and Strings Introduction to Strings Character Manipulation C-string manipulation C-String concatenation and copy Introducing std::string Declaring and using std::string</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/12_function/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/12_function/</guid>
      <description>Chapter 11: Functions The One Definition Rule First Hand on C++ Functions Function Declaration and Function Definitions Multiple Files - Compilation Model Revisited Pass by value Pass by pointer Pass by reference
Chapter 12: Getting Things out of functions Introduction to getting things out of functions Input and output parameters Returning from functions by value</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/13_function_overloading/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/13_function_overloading/</guid>
      <description>Chapter 13: Function Overloading Function Overloading Introduction Overloading with different parameters</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/14_lambda_function/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/14_lambda_function/</guid>
      <description>Chapter 14: Lambda functions Introduction to Lambda Functions Declaring and using lambda functions Capture lists Capture all in context Summary</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/15_function_template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/15_function_template/</guid>
      <description>Chapter 15: Function Templates Introduction to function templates Trying out function templates Template type deduction and explicit arguments Template parameters by reference Template specialization</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/16_concept/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/16_concept/</guid>
      <description>Chapter 16: C++20 Concepts Crash course Introduction to C++20 Concepts Using C++20 Concepts Building your own C++20 Concepts Zooming in on the requires clause Combining C++20 Concepts C++20 Concepts and auto</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/17_class/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/17_class/</guid>
      <description>Chapter 17: Classes Introduction to classes Your First Class C++ Constructors Defaulted constructors Setters and Getters Class Across Multiple Files Arrow pointer call notation Destructors Order of Constructor Destructor Calls The this Pointer struct Size of objects</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/18_inheritance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/18_inheritance/</guid>
      <description>Chapter 18: Inheritance Introduction to Inheritance First try on Inheritance Protected members Base class access specifiers : Zooming in Base class access specifiers - A demo Closing in on Private Inheritance Resurrecting Members Back in Context Default Constructors with Inheritance Custom Constructors With Inheritance Copy Constructors with Inheritance Inheriting Base Constructors Inheritance and Destructors Reused Symbols in Inheritance</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/19_polymorphism/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/19_polymorphism/</guid>
      <description>Chapter 19: Polymorphism Introduction to Polymorphism Static Binding with Inheritance Dynamic binding with virtual functions Size of polymorphic objects and slicing Polymorphic objects stored in collections (array) Override Overloading, overriding and function hiding Inheritance and Polymorphism at different levels Inheritance and polymorphism with static members Final Virtual functions with default arguments Virtual Destructors Dynamic casts Polymorphic Functions and Destructors Pure virtual functions and abstract classes Abstract Classes as Interfaces</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/4_variable_and_datatype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/4_variable_and_datatype/</guid>
      <description>Chapter 3: Variables and data types Variables and data types Introduction Number Systems Integer types : Decimals and Integers Integer Modifiers Fractional Numbers Booleans Characters And Text Auto Assignments Variables and data types summary
Bài 3: Xây dựng chương trình C++ đầu tiên với Visual Studio 2015
Một số kiến thức cần lưu ý Cách tạo và biên dịch chương trình C++ đầu tiên trên Visual Studio Một số vấn đề thường gặp đối với lập trình viên mới Bài 4: Cấu trúc một chương trình C++ (Structure of a program)</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/5_operator_on_data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/5_operator_on_data/</guid>
      <description>Chapter 4: Operations on Data Introduction on Data operations Basic Operations Precedence and Associativity Prefix/Postfix Increment &amp;amp; Decrement Compound Assignment Operators Relational Operators Logical Operators Output formatting Numeric Limits Math Functions Weird Integral Types Data Operations Summary</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/6_flow_control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/6_flow_control/</guid>
      <description>Chapter 5: Flow Control Flow Control Introduction If Statements Else If Switch Ternary Operators Flow Control Summary</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/7_loop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/7_loop/</guid>
      <description>Chapter 6: Loops Loops Introduction For Loop While Loop Do While Loop</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/8_array/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/8_array/</guid>
      <description>Chapter 7: Arrays Introduction to Arrays Declaring and using arrays Size of an array Arrays of characters Array Bounds</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/cplusplus/9_array/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/cplusplus/9_array/</guid>
      <description>Chapter 8: Pointers Introduction to Pointers Declaring and using pointers Pointer to char Program Memory Map Revisited Dynamic Memory Allocation Dangling Pointers When new Fails Null Pointer Safety Memory Leaks Dynamically allocated arrays</description>
    </item>
    
    <item>
      <title></title>
      <link>/courses/data_structures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/courses/data_structures/</guid>
      <description>⌨️ (0:00:00) Introduction to data structures ⌨️ (0:06:33) Data Structures: List as abstract data type ⌨️ (0:19:40) Introduction to linked list ⌨️ (0:36:50) Arrays vs Linked Lists ⌨️ (0:49:05) Linked List - Implementation in C/C++ ⌨️ (1:03:02) Linked List in C/C++ - Inserting a node at beginning ⌨️ (1:15:50) Linked List in C/C++ - Insert a node at nth position ⌨️ (1:31:04) Linked List in C/C++ - Delete a node at nth position ⌨️ (1:43:32) Reverse a linked list - Iterative method ⌨️ (1:57:21) Print elements of a linked list in forward and reverse order using recursion ⌨️ (2:11:43) Reverse a linked list using recursion ⌨️ (2:20:38) Introduction to Doubly Linked List ⌨️ (2:27:50) Doubly Linked List - Implementation in C/C++ ⌨️ (2:43:09) Introduction to stack ⌨️ (2:51:34) Array implementation of stacks ⌨️ (3:04:42) Linked List implementation of stacks ⌨️ (3:15:39) Reverse a string or linked list using stack.</description>
    </item>
    
    <item>
      <title></title>
      <link>/privacy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/privacy/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Contact Us</title>
      <link>/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/contact/</guid>
      <description></description>
    </item>
    
    <item>
      <title>FAQs</title>
      <link>/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/faq/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Offline</title>
      <link>/offline/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/offline/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
